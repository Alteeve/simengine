{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/images/c14.svg","webpack:///./src/components/canvasEvents.js","webpack:///./src/components/TopNav.js","webpack:///./src/components/AssetDetails.js","webpack:///./src/images/ups_monitor_2.png","webpack:///./src/components/Assets/UPS/Ups.js","webpack:///./src/images/server-front.svg","webpack:///./src/images/power-supply.svg","webpack:///./src/components/Assets/Server/PowerSupply.js","webpack:///./src/components/Assets/Server/Server.js","webpack:///./src/images/socket.svg","webpack:///./src/components/Assets/PDU/Pdu.js","webpack:///./src/images/grid.png","webpack:///./src/components/App.js","webpack:///./src/index.js","webpack:///./src/components/Assets/common/SocketStatus.js","webpack:///./src/components/Assets/common/Socket.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","p","jsonpArray","window","webpackJsonp","oldJsonpFunction","bind","slice","181","e","t","onWheelScroll","stage","scale","x","y","position","innerWidth","innerHeight","addEventListener","preventDefault","oldScale","scaleX","mousePointTo","getPointerPosition","newScale","deltaY","newPos","batchDraw","onWheelDown","moveCanvas","movementX","movementY","button","removeEventListener","u","f","_core","TopNav","props","this","_this","__proto__","getPrototypeOf","handleMenu","event","setState","drawerAnchor","currentTarget","handleDrawerClose","state","React","Component","classes","drawerOpen","Boolean","_react2","createElement","_AppBar2","className","_classnames2","appBar","_Toolbar2","_Typography2","variant","color","noWrap","_IconButton2","aria-owns","aria-haspopup","onClick","_Settings2","Drawer","open","onClose","paper","drawerPaper","anchor","toolbar","Divider","tabIndex","role","onKeyDown","fullList","_List2","_ListItem2","saveLayout","_ListItemText2","primary","propTypes","PropTypes","func","isRequired","a","_styles","AssetDetails","assetInfo","assetKey","changeStatus","children","key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","Symbol","iterator","next","done","ckey","component","type","status","style","err","return","_Card2","card","_CardHeader2","title","backgroundColor","_CardContent2","load","toFixed","_Divider2","_FormControlLabel2","control","_Switch2","checked","aria-label","onChange","label","maxHeight","overflow","string","withStyles","minWidth","top","right","bullet","display","margin","transform","marginBottom","fontSize","pos","432","writable","_reactKonva","Ups","handleClick","refs","ups","setZIndex","onElementSelection","assetId","asset","selectSocket","selectedSocketKey","updateUpsPos","target","attrs","onPosChange","ups_monitor","c14","_this2","upsMonitorImg","Image","c14Img","src","onload","nextProps","_this3","sockets","inputSocket","image","upsName","chargeBar","battery","substring","socketIndex","_loop","_Socket2","selectable","draggable","selected","nestedComponentSelected","powered","parentSelected","hideName","Group","onDragMove","ref","Path","strokeWidth","stroke","fill","Rect","width","height","Text","text","fontFamily","Math","floor","number","bool","434","435","PowerSupply","updateSocketPos","psimg","strokeColor","_SocketStatus2","socketOn","red_means_on","bgImage","defaultProps","Server","server","selectedPsuKey","updateServerPos","frontimg","psus","serverName","_PowerSupply2","438","Pdu","pdu","updatePduPos","newProps","pduName","round","506","assign","arguments","_react","v","h","b","_canvasEvents","App","assets","selectedAssetKey","connections","socketOffline","changesSaved","connectToSocket","getStage","new_uri","loc","location","protocol","hostname","ws","WebSocket","onopen","onmessage","evt","JSON","parse","asset_details","_extends","parent_id","_get_parent_key","assetDetails","map","k","x1","y1","x1_pad","parent","parent_key","stageLayout","onclose","setTimeout","alert","strkey","newConn","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_get_asset_by_key","_update_wiring","childConn","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","outletIndex","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","oldState","selectedAsset","send","stringify","request","_state","readyState","OPEN","_Pdu2","find","_Server2","_this4","_Ups2","_this5","_state2","systemLayout","wireDrawing","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","drawSocket","drawPdu","drawServer","drawUps","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","socketYpad","socketXpad","child_type","Line","points","zIndex","snackbarOrigin","vertical","horizontal","root","appFrame","_TopNav2","content","backgroundImage","gridBackground","backgroundRepeat","backgroundSize","Stage","Layer","_AssetDetails2","_Snackbar2","anchorOrigin","message","autoHideDuration","href","theme","flexGrow","appBar-left","marginLeft","mixins","palette","background","padding","spacing","unit","menuButton","marginRight","list","ReactDOM","render","_App2","document","getElementById","515","524","96","SocketStatus","_ref","shadowBlur","Socket","socket","imgUrl","oldHeight"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([515,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"images/c14.svg\";","/** Scale Layout on wheel event */\nconst onWheelScroll = (stage) => {\n  stage.scale({ x: 0.7, y: 0.7 });\n  stage.position({x: window.innerWidth * 0.3, y: window.innerHeight * 0.3 });\n\n  const scaleBy = 1.03;\n  window.addEventListener('wheel', (e) => {\n    e.preventDefault();\n\n    const oldScale = stage.scaleX();\n\n    const mousePointTo = {\n        x: stage.getPointerPosition().x / oldScale - stage.x() / oldScale,\n        y: stage.getPointerPosition().y / oldScale - stage.y() / oldScale,\n    };\n\n    const newScale = e.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n    stage.scale({ x: newScale, y: newScale });\n\n    const newPos = {\n        x: -(mousePointTo.x - stage.getPointerPosition().x / newScale) * newScale,\n        y: -(mousePointTo.y - stage.getPointerPosition().y / newScale) * newScale\n    };\n    stage.position(newPos);\n    stage.batchDraw();\n  });\n};\n\n/** Move canvas on middle mouse button down */\nconst onWheelDown = (stage) => {\n  const moveCanvas = (e) => {\n    e.preventDefault();\n      const newPos = {\n        x: (stage.x() + e.movementX),\n        y: (stage.y() + e.movementY),\n    };\n    stage.position(newPos);\n    stage.batchDraw();\n  };\n\n  window.addEventListener(\"mousedown\", (e) => {\n    if (e.button == 1) {\n      e.preventDefault();\n      window.addEventListener(\"mousemove\", moveCanvas);\n    }\n  });\n\n  window.addEventListener(\"mouseup\", (e) => {\n    if (e.button == 1) {\n      e.preventDefault();\n      window.removeEventListener(\"mousemove\", moveCanvas);\n    }\n  });\n};\n\nexport { onWheelScroll, onWheelDown, };\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n// Material imports\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Divider, Drawer} from '@material-ui/core';\n\nclass TopNav extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      drawerAnchor: null\n    };\n  }\n\n  handleMenu = event => {\n    this.setState({ drawerAnchor: event.currentTarget });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ drawerAnchor: null });\n  };\n\n  render() {\n\n    const { classes } = this.props;\n\n    const { drawerAnchor } = this.state;\n    const drawerOpen = Boolean(drawerAnchor);\n\n    return (\n      <AppBar\n        position=\"absolute\"\n        className={classNames(classes.appBar, classes[`appBar-left`])}\n      >\n        <Toolbar>\n          <Typography variant=\"title\" color=\"inherit\" noWrap>\n            HAos Simulation Engine\n          </Typography>\n          <div>\n            <IconButton aria-owns={drawerOpen ? 'menu-appbar' : null}\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={this.handleMenu}\n            >\n            <SettingsIcon/>\n            </IconButton>\n              <Drawer open={drawerOpen} onClose={this.handleDrawerClose}\n                classes={{paper: classes.drawerPaper,}} anchor={'left'}>\n                <div className={classes.toolbar}/>\n                <Divider />\n                <div\n                  tabIndex={0}\n                  role=\"button\"\n                  onClick={this.handleDrawerClose}\n                  onKeyDown={this.handleDrawerClose}\n                >\n                  <div className={classes.fullList}>\n                    <List>\n                      <ListItem button onClick={this.props.saveLayout.bind(this)}>\n                        <ListItemText primary=\"Save Layout\" />\n                      </ListItem>\n                    </List>\n                  </div>\n                </div>\n            </Drawer>\n          </div>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nTopNav.propTypes = {\n  classes: PropTypes.object, // styling\n  saveLayout: PropTypes.func.isRequired // drawer Save Layout callback\n};\n\n\nexport default TopNav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction AssetDetails(props) {\n  const { classes, assetInfo, assetKey, changeStatus } = props;\n  let children = [];\n\n  if(assetInfo.children) {\n    children.push(\n      <div key={0}><h3> Connected Components </h3></div>\n    );\n\n    const c = assetInfo.children;\n    for (const ckey of Object.keys(c)) {\n        children.push(\n          <div key={ckey}>\n            <Typography variant=\"subheading\" component=\"h5\">\n              {ckey}-{c[ckey].type} is {c[ckey].status === 1?<span style={{color: 'green'}}>on</span>:<span style={{color: 'red'}}>off</span>}\n            </Typography>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div>\n      <Card className={classes.card}>\n        <CardHeader\n          title=\"Selected Asset Details\"\n          style={{ backgroundColor: '#e1e6ea' }}\n        />\n        <CardContent>\n          <Typography variant=\"headline\" component=\"h2\">\n            Asset: {assetKey}-{assetInfo.type}\n          </Typography>\n          <Typography component=\"p\">\n            Status: {assetInfo.status === 1?<span style={{color: 'green'}}>on</span>:<span style={{color: 'red'}}>off</span>}\n          </Typography>\n          <Typography component=\"p\">\n            Name: {assetInfo.name}\n          </Typography>\n\n\n          <Typography component=\"p\">\n            Current Load: {assetInfo.load ? assetInfo.load.toFixed(2): 0}\n          </Typography>\n          <Divider />\n            {/* Turn off/on the component */}\n            <FormControlLabel\n              control={<Switch checked={assetInfo.status === 1} aria-label=\"LoginSwitch\" onChange={()=>changeStatus(assetKey, assetInfo)}/>}\n              label={\"Toggle Status\"}\n            />\n          <Divider/>\n          {/* Display any nested elements */}\n          <div style={{maxHeight: 500, overflow: 'auto'}}>\n            {children}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nAssetDetails.propTypes = {\n  classes: PropTypes.object.isRequired,\n  assetInfo: PropTypes.object.isRequired,\n  assetKey: PropTypes.string.isRequired,\n  changeStatus: PropTypes.func.isRequired, // Change asset state\n};\n\n\nconst styles = {\n  card: {\n    minWidth: 320,\n    position: 'absolute',\n    top: 90,\n    right: 20,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    marginBottom: 16,\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n};\n\nexport default withStyles(styles)(AssetDetails);\n","module.exports = __webpack_public_path__ + \"images/ups_monitor_2.png\";","\nimport React from 'react';\nimport { Text, Group, Path, Image, Rect } from 'react-konva';\nimport PropTypes from 'prop-types';\n\nimport ups_monitor from '../../../images/ups_monitor_2.png';\nimport c14 from '../../../images/c14.svg';\nimport Socket from '../common/Socket';\n\n/**\n * Draw Ups graphics\n */\nexport default class Ups extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: 'grey',\n      selectedSocketKey: -1,\n      x: props.x?props.x:40,\n      y: props.y?props.y:40,\n      ups_monitor: null,\n      c14: null\n    };\n    this.selectSocket = this.selectSocket.bind(this);\n  }\n\n  componentDidMount() {\n    const upsMonitorImg = new window.Image();\n    const c14Img = new window.Image();\n\n    upsMonitorImg.src = ups_monitor;\n    upsMonitorImg.onload = () => {\n      // setState will redraw layer\n      // because \"upsMonitorImg\" property is changed\n      this.setState({ ups_monitor: upsMonitorImg });\n    };\n\n    c14Img.src = c14;\n    c14Img.onload = () => {\n      // setState will redraw layer\n      // because \"c14Img\" property is changed\n      this.setState({ c14: c14Img });\n    };\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ x: nextProps.x, y: nextProps.y });\n  }\n\n  /** Notify Parent of Selection */\n  handleClick = () => {\n    this.refs.ups.setZIndex(100);\n    this.props.onElementSelection(this.props.assetId, this.props.asset);\n  };\n\n  /** Notify top-lvl Component that PDU-Outlet was selected*/\n  selectSocket = (ckey) => {\n    this.setState({ selectedSocketKey: ckey });\n    this.props.onElementSelection(ckey, this.props.asset.children[ckey]);\n  }\n\n  updateUpsPos = (s) => {\n    this.setState({ x: s.target.attrs.x, y : s.target.attrs.y });\n    this.props.onPosChange(this.props.assetId, s);\n  }\n\n  render() {\n\n    let sockets = [];\n    // const inputSocket = <Socket x={-70} socketName={\"input socket\"} selectable={false} draggable={false}/>;\n    const inputSocket = <Image image={this.state.c14} x={254} y={5}/>;\n    //let x=50;\n    const upsName = this.props.asset.name ? this.props.asset.name:'ups';\n    let chargeBar = \"|||||||||||||||||||||||||||||||||||\";\n    chargeBar = this.props.asset.battery === 1000 ? chargeBar: chargeBar.substring(chargeBar.length * (1-this.props.asset.battery * 0.001));\n\n    const asset = this.props.asset;\n    let y=10;\n    let x=5;\n    let socketIndex = 0;\n    // Initialize outlets that are part of the PDU\n    for (const ckey of Object.keys(asset.children)) {\n\n      asset.children[ckey].name = `[${ckey}]`;\n      sockets.push(\n        <Socket\n          y={y}\n          x={x}\n          key={ckey}\n          onElementSelection={() => { this.selectSocket(ckey); }}\n          selectable={true}\n          draggable={false}\n          asset={asset.children[ckey]}\n          assetId={ckey}\n          selected={this.state.selectedSocketKey === ckey && this.props.nestedComponentSelected}\n          powered={this.props.asset.status !== 0}\n          parentSelected={this.props.selected}\n          hideName={true}\n          onPosChange={this.props.onPosChange}\n        />\n      );\n      x += 100;\n      socketIndex++;\n      if (socketIndex == 4) {\n        y += 100;\n        x = 5;\n      }\n    }\n\n\n    return (\n      <Group\n        draggable=\"true\"\n        onDragMove={this.updateUpsPos.bind(this)}\n        x={this.state.x}\n        y={this.state.y}\n        ref=\"ups\"\n      >\n\n\n        {/* Draw Ups as SVG path */}\n        <Path data={\"M 51.551168,118.02771 H 161.85062 l 10.30629,7.10992 H 41.244884 Z M 41.225275,125.12154 H 172.17651 c 0.86917,0 1.56887,5.60194 1.56887,12.56046 v 86.52769 c 0,6.95848 -0.6997,12.56045 -1.56887,12.56045 H 41.225275 c -0.869151,0 -1.568866,-5.60197 -1.568866,-12.56045 V 137.682 c 0,-6.95852 0.699715,-12.56046 1.568866,-12.56046 z\"}\n          strokeWidth={0.4}\n          stroke={this.props.selected ? 'blue' : 'grey'}\n          fill={'white'}\n          scale={{x: 4, y: 4}}\n          y={-575}\n          onClick={this.handleClick.bind(this)}\n        />\n\n        {/* UPS Output */}\n        <Group\n         x={250}\n         y={130}\n        >\n          <Rect\n            ref=\"rect\"\n            width=\"390\"\n            height=\"210\"\n            fill=\"white\"\n            stroke={this.props.selected ? 'blue' : 'grey'}\n            strokeWidth={1.4}\n          />\n          {sockets}\n        </Group>\n\n\n        <Text y={-125} x={230} text={upsName} fontSize={18}  fontFamily={'Helvetica'} />\n\n        {/* UPS Display */}\n        <Group\n          x={345}\n          y={-50}\n        >\n          <Image\n              image={this.state.ups_monitor}\n              onClick={this.handleClick}\n          />\n          <Group y={50} x={18}>\n            <Text\n              text={`Output ${this.props.asset.status?'ON':'OFF'}`}\n              fontFamily={'DSEG14Modern'}\n              fontSize={16}\n              fill={this.props.asset.status?'white':'grey'}\n            />\n\n            <Text y={30}\n              text={`Batt ${Math.floor(this.props.asset.battery/10)}%`}\n              fontFamily={'DSEG14Modern'}\n              fontSize={16}\n              fill={this.props.asset.status?'white':'grey'}\n            />\n            <Text y={30} x={110}\n              text={chargeBar}\n\n              fontSize={16}\n              fill={this.props.asset.status?'white':'grey'}\n            />\n          </Group>\n        </Group>\n\n        {/* Input Socket */}\n        {inputSocket}\n\n      </Group>\n    );\n  }\n}\n\nUps.propTypes = {\n  name: PropTypes.string,\n  x: PropTypes.number, // X position of the asset\n  y: PropTypes.number, // Y position of the asset\n  onPosChange: PropTypes.func.isRequired, // called on asset position change\n  asset: PropTypes.object.isRequired, // Asset Details\n  assetId: PropTypes.string.isRequired, // Asset Key\n  selected: PropTypes.bool.isRequired, // Asset Selected by a user\n  onElementSelection: PropTypes.func.isRequired, // Notify parent component of selection\n  nestedComponentSelected: PropTypes.bool.isRequired, // One of the UPS outlets are selected\n};\n","module.exports = __webpack_public_path__ + \"images/server-front.svg\";","module.exports = __webpack_public_path__ + \"images/power-supply.svg\";","\nimport React from 'react';\nimport { Text, Image, Group } from 'react-konva';\nimport psimg from '../../../images/power-supply.svg';\nimport SocketStatus from '../common/SocketStatus';\nimport PropTypes from 'prop-types';\n\n\n/**\n * Outlet Graphics\n */\nexport default class PowerSupply extends React.Component {\n\n    constructor(props) {\n      super();\n      this.state = {\n        image: null,\n        color: 'grey',\n        x: props.x?props.x:40,\n        y:0,\n      };\n    }\n\n\n    /** Load Socket Image */\n    componentDidMount() {\n      const image = new window.Image();\n      image.src = psimg;\n      image.onload = () => {\n        // setState will redraw layer\n        // because \"image\" property is changed\n        this.setState({\n          image: image\n        });\n      };\n\n    }\n\n     /** Notify Parent of Selection */\n    handleClick = () => {\n      if (this.props.selectable) {\n        this.props.onElementSelection(this.props.assetId, this.props.asset);\n      }\n    };\n\n    updateSocketPos = (s) => {\n      this.setState({ x: s.target.attrs.x, y : s.target.attrs.y });\n      this.props.onPosChange(this.props.assetId, s);\n    }\n\n    render() {\n\n      let strokeColor = this.state.color;\n\n      // Selected when either parent element (e.g. PDU outlet belongs to) is selected\n      // or the socket was selected\n      if (this.props.selectable) {\n        strokeColor = (this.props.selected || this.props.parentSelected) ? \"blue\" : \"grey\";\n      }\n\n      return(\n        <Group\n          x={this.state.x}\n          y={this.state.y}\n          onDragMove={this.updateSocketPos.bind(this)}\n        >\n          <Image\n            image={this.state.image}\n            stroke={strokeColor}\n            onClick={this.handleClick}\n          />\n\n          {/* LED */}\n          {this.props.selectable &&\n            <SocketStatus socketOn={this.props.red_means_on?!this.props.asset.status:this.props.asset.status} powered={this.props.powered}/>\n          }\n          <Text text={this.props.asset && this.props.asset.name ? this.props.asset.name :'socket'}  y={this.state.bgImage ? 175: 105} />\n        </Group>\n      );\n    }\n}\n\nPowerSupply.defaultProps = {\n  red_means_on: false,\n};\n\nPowerSupply.propTypes = {\n  x: PropTypes.number,\n  onPosChange: PropTypes.func, // called on asset position change\n  powered: PropTypes.bool.isRequired, // indicates if upstream power is present\n  asset: PropTypes.object, // Asset Details\n  assetId: PropTypes.string, // Asset Key\n  selected: PropTypes.bool, // Selected by user\n  parentSelected: PropTypes.bool, // Used when an outlet belongs to an asset\n  onElementSelection: PropTypes.func, // Notify parent component of selection\n  selectable: PropTypes.bool.isRequired, // Outlet is an asset\n  red_means_on: PropTypes.bool,\n};\n","import React from 'react';\nimport { Text, Group, Path, Image } from 'react-konva';\nimport PropTypes from 'prop-types';\nimport SocketStatus from '../common/SocketStatus';\nimport PowerSupply from './PowerSupply';\nimport frontimg from '../../../images/server-front.svg';\n/**\n * Draw Server graphics\n */\nexport default class Server extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: 'grey',\n      selectedPsuKey: -1,\n      x: props.x?props.x:40,\n      y: props.y?props.y:40,\n      frontimg: null\n    };\n    this.selectSocket = this.selectSocket.bind(this);\n  }\n\n  componentDidMount() {\n    const image = new window.Image();\n    image.src = frontimg;\n    image.onload = () => {\n      // setState will redraw layer\n      // because \"image\" property is changed\n      this.setState({ frontimg: image });\n    };\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ x: nextProps.x, y: nextProps.y });\n  }\n\n  /** Notify Parent of Selection */\n  handleClick = () => {\n    this.refs.server.setZIndex(100);\n    this.props.onElementSelection(this.props.assetId, this.props.asset);\n  };\n\n  /** Notify top-lvl Component that PDU-Outlet was selected*/\n  selectSocket = (ckey) => {\n    this.setState({ selectedPsuKey: ckey });\n    this.props.onElementSelection(ckey, this.props.asset.children[ckey]);\n  }\n\n  updateServerPos = (s) => {\n    this.setState({ x: s.target.attrs.x, y : s.target.attrs.y });\n    this.props.onPosChange(this.props.assetId, s);\n  }\n\n  render() {\n\n    let psus = [];\n    // const inputSocket = <Socket x={-70} socketName={\"input socket\"} selectable={false} draggable={false}/>;\n\n    let x=50;\n    const serverName = this.props.asset.name ? this.props.asset.name:'ups';\n    const asset = this.props.asset;\n\n    // Initialize Powe Supplies\n    for (const ckey of Object.keys(asset.children)) {\n\n      asset.children[ckey].name = `[${ckey}]`;\n      psus.push(\n        <PowerSupply\n          x={x}\n          key={ckey}\n          onElementSelection={() => { this.selectSocket(ckey); }}\n          selectable={true}\n          draggable={false}\n          asset={asset.children[ckey]}\n          assetId={ckey}\n          selected={this.state.selectedPsuKey === ckey && this.props.nestedComponentSelected}\n          powered={this.props.powered}\n          parentSelected={this.props.selected}\n        />\n      );\n      x += 240;\n    }\n    return (\n      <Group\n        draggable=\"true\"\n        onDragMove={this.updateServerPos.bind(this)}\n        x={this.state.x}\n        y={this.state.y}\n        ref=\"server\"\n      >\n\n\n        {/* Draw Server as SVG path */}\n        <Path data={\"m 7.84681,135.86767 h 194.30638 c 1.28966,0 2.3279,1.85111 2.3279,4.15049 v 28.5923 c 0,2.29937 -1.03824,4.15049 -2.3279,4.15049 H 7.84681 c -1.289654,0 -2.327895,-1.85112 -2.327895,-4.15049 v -28.5923 c 0,-2.29938 1.038241,-4.15049 2.327895,-4.15049 z M 22.554872,124.18558 H 187.44512 l 15.40721,11.70857 H 7.147672 Z\"}\n          strokeWidth={0.4}\n          stroke={this.props.selected ? 'blue' : 'grey'}\n          fill={'white'}\n          scale={{x: 4, y: 4}}\n          y={-575}\n          onClick={this.handleClick.bind(this)}\n        />\n\n        <Text y={-100} text={serverName} fontSize={18}  fontFamily={'Helvetica'}/>\n        {/* Draw Power Supplies */}\n        {psus}\n\n        {/* Draw some placeholder server-stuff */}\n        <Image\n            image={this.state.frontimg}\n            x={550}\n            y={-20}\n            onClick={this.handleClick}\n        />\n         <SocketStatus socketOn={this.props.asset.status} powered={this.props.powered}/>\n      </Group>\n    );\n  }\n}\n\nServer.propTypes = {\n  x: PropTypes.number, // X position of the asset\n  y: PropTypes.number, // Y position of the asset\n  onPosChange: PropTypes.func.isRequired, // called on asset position change\n  powered: PropTypes.bool.isRequired, // indicates if upstream power is present\n  name: PropTypes.string,\n  asset: PropTypes.object.isRequired, // Asset Details\n  assetId: PropTypes.string.isRequired, // Asset Key\n  selected: PropTypes.bool.isRequired, // Asset Selected by a user\n  onElementSelection: PropTypes.func.isRequired, // Notify parent component of selection\n  nestedComponentSelected: PropTypes.bool.isRequired, // One of the powerSupplies are selected\n};\n","module.exports = __webpack_public_path__ + \"images/socket.svg\";","import React from 'react';\nimport { Text, Group, Path, Image, Rect } from 'react-konva';\nimport Socket from '../common/Socket';\nimport PropTypes from 'prop-types';\nimport c14 from '../../../images/c14.svg';\n/**\n * Draw PDU graphics\n */\nexport default class Pdu extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: 'grey',\n      selectedSocketKey: -1,\n      x: props.x?props.x:40,\n      y: props.y?props.y:40,\n      c14: null\n    };\n    this.selectSocket = this.selectSocket.bind(this);\n  }\n\n  componentDidMount() {\n    const image = new window.Image();\n    image.src = c14;\n    image.onload = () => {\n      // setState will redraw layer\n      // because \"image\" property is changed\n      this.setState({ c14: image });\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({ x: newProps.x, y: newProps.y });\n  }\n\n  /** Notify Parent of Selection */\n  handleClick = () => {\n    this.refs.pdu.setZIndex(100);\n    this.props.onElementSelection(this.props.assetId, this.props.asset);\n  };\n\n  /** Notify top-lvl Component that PDU-Outlet was selected*/\n  selectSocket = (ckey) => {\n    this.setState({ selectedSocketKey: ckey });\n    this.props.onElementSelection(ckey, this.props.asset.children[ckey]);\n  }\n\n  updatePduPos = (s) => {\n    this.setState({ x: s.target.attrs.x, y : s.target.attrs.y });\n    this.props.onPosChange(this.props.assetId, s);\n  }\n\n  render() {\n\n    let sockets = [];\n    const inputSocket = <Image image={this.state.c14} x={-70}/>;\n\n    let x=100;\n    const pduName = this.props.asset.name ? this.props.asset.name:'pdu';\n    const asset = this.props.asset;\n    let load = Math.round(asset.load);\n    load = load > 9?\"\"+load:\"0\"+load;\n\n    // Initialize outlets that are part of the PDU\n    for (const ckey of Object.keys(asset.children)) {\n\n      asset.children[ckey].name = `[${ckey}]`;\n      sockets.push(\n        <Socket\n          x={x}\n          key={ckey}\n          onElementSelection={() => { this.selectSocket(ckey); }}\n          selectable={true}\n          draggable={false}\n          asset={asset.children[ckey]}\n          assetId={ckey}\n          selected={this.state.selectedSocketKey === ckey && this.props.nestedComponentSelected}\n          powered={this.props.asset.status !== 0}\n          parentSelected={this.props.selected}\n          onPosChange={this.props.onPosChange}\n        />\n      );\n      x += 90;\n    }\n\n    return (\n      <Group\n        draggable=\"true\"\n        onDragMove={this.updatePduPos.bind(this)}\n        x={this.state.x}\n        y={this.state.y}\n        ref=\"pdu\"\n      >\n\n        {/* Draw PDU - SVG Path */}\n        <Path data={\"M -27.214914,140.21439 H 253.08991 c 1.86045,0 3.3582,1.41492 3.3582,3.17248 v 21.85487 c 0,1.75755 -1.49775,3.17248 -3.3582,3.17248 H -27.214914 c -1.860445,0 -3.358203,-1.41493 -3.358203,-3.17248 v -21.85487 c 0,-1.75756 1.497758,-3.17248 3.358203,-3.17248 z M -5.9971812,128.5323 H 231.87216 l 22.22631,11.70857 H -28.223485 Z\"}\n          strokeWidth={0.4}\n          stroke={this.props.selected ? 'blue' : 'grey'}\n          fill={'white'}\n          scale={{x: 4, y: 4}}\n          y={-575}\n          onClick={this.handleClick.bind(this)}\n        />\n        <Text y={-85} text={pduName} fontSize={18}  fontFamily={'Helvetica'}/>\n        <Group y={15} x={845}>\n          <Rect width={60} height={60} fill={\"#4d4d4d\"} stroke={\"black\"}/>\n          <Text y={10} x={5} text={load} fontFamily={'DSEG7Modern'} fontSize={30} fill={this.props.asset.status?'yellow':'grey'} />\n          <Text y={65} x={8} text={\"AMPS\"} />\n        </Group>\n        {/* Draw Sockets */}\n        {inputSocket}\n        {sockets}\n      </Group>\n    );\n  }\n}\n\nPdu.propTypes = {\n  x: PropTypes.number, // X position of the asset\n  y: PropTypes.number, // Y position of the asset\n  onPosChange: PropTypes.func.isRequired, // called on PDU position change\n  powered: PropTypes.bool.isRequired, // indicates if upstream power is present\n  name: PropTypes.string,\n  asset: PropTypes.object.isRequired, // Asset Details\n  assetId: PropTypes.string.isRequired, // Asset Key\n  selected: PropTypes.bool.isRequired, // Asset Selected by a user\n  onElementSelection: PropTypes.func.isRequired, // Notify parent component of selection\n  nestedComponentSelected: PropTypes.bool.isRequired, // One of the PDU outlets are selected\n};\n","module.exports = __webpack_public_path__ + \"images/grid.png\";","import React, { Component } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport gridBackground from '../images/grid.png';\nimport PropTypes from 'prop-types';\n\n// Material\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n// Local Components - Layout\nimport Pdu from './Assets/PDU/Pdu';\nimport Socket from './Assets/common/Socket';\nimport Server from './Assets/Server/Server';\nimport Ups from './Assets/UPS/Ups';\n\n// Text & info boxes\nimport AssetDetails from './AssetDetails';\nimport TopNav from './TopNav';\n\n// few helpers\nimport { onWheelScroll, onWheelDown } from './canvasEvents';\n\nconst drawerWidth = 240;\n\n class App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      assets: null,\n      selectedAssetKey: 0,\n      connections:{},\n      socketOffline: true,\n      changesSaved: false,\n    };\n\n    this.connectToSocket();\n  }\n\n  componentDidMount() {\n    let stage = this.refs.stage.getStage();\n    // scale on wheel scroll, and move canvas on middle button click\n    onWheelScroll(stage);\n    onWheelDown(stage);\n  }\n\n  connectToSocket() {\n    if (\"WebSocket\" in window)\n    {\n       // console.log(\"WebSocket is supported by your Browser!\");\n       // Let us open a web socket\n       let new_uri = '';\n       let loc = window.location;\n       if (loc.protocol === \"https:\") {\n          new_uri = \"wss:\";\n       } else {\n          new_uri = \"ws:\";\n       }\n       new_uri += \"//\" + loc.hostname + ':8000/simengine';\n       this.ws = new WebSocket(new_uri);\n       this.ws.onopen = (() =>\n       {\n          // Web Socket is connected, send data using send()\n          // this.ws.send(\"Hello server\");\n          // alert(\"Message is sent...\");\n          this.setState({ socketOffline: false });\n       });\n       this.ws.onmessage = ((evt) =>\n       {\n          const data = JSON.parse(evt.data);\n          // Update state of the existing asset\n          if(data && 'key' in data) {\n\n            let assets = {...this.state.assets};\n            const isComponent = !this.state.assets[data.key];\n\n            if (isComponent) {\n              const parent_id = this._get_parent_key(data.key);\n              let asset_details = {...assets[parent_id].children[data.key]};\n              assets[parent_id].children[data.key] = {...asset_details, ...data.data};\n            } else {\n              let asset_details = {...assets[data.key]};\n              assets[data.key] = {...asset_details, ...data.data};\n            }\n\n            this.setState({ assets });\n\n          } else if (data && 'assets' in data) { // initial query\n            let connections = {};\n            const assetDetails = data['assets'];\n\n            Object.keys(assetDetails).map((k) => {\n              let x1 = assetDetails[k].x?assetDetails[k].x:40;\n              let y1 = assetDetails[k].y?assetDetails[k].y:0;\n              let x1_pad = 0;\n              if (assetDetails[k]['parent']) {\n                for (const p of assetDetails[k]['parent']) {\n                  const isComponent = !assetDetails[p.key];\n\n                  let x = 0;\n                  let y = 0;\n                  if (isComponent) {\n                    const parent_key = this._get_parent_key(p.key);\n                    x = assetDetails[parent_key].children[p.key].x;\n                    y = assetDetails[parent_key].children[p.key].y;\n                  } else {\n                    x = assetDetails[p.key].x?assetDetails[p.key].x:50;\n                    y = assetDetails[p.key].y?assetDetails[p.key].y:50;\n                  }\n\n                  connections[p.key] = {x, y, x1: x1+x1_pad, y1, ckey: k };\n                  x1_pad+=250;\n                }\n              }\n            });\n\n            this.setState({\n              assets: assetDetails,\n              connections\n            });\n          }\n\n          if (data && data['stageLayout']) {\n            let stage = this.refs.stage.getStage();\n            stage.position({ x: data['stageLayout'].x, y: data['stageLayout'].y });\n            stage.scale({ x: data['stageLayout'].scale, y: data['stageLayout'].scale });\n          }\n\n\n       }).bind(this);\n       this.ws.onclose =  (() =>\n       {\n          // websocket is closed. try to reconnect every 5 seconds\n          // alert(\"Connection is closed...\");\n          this.setState({ socketOffline: true });\n          setTimeout(() => {this.connectToSocket();}, 5000);\n       }).bind(this);\n    }\n    else\n    {\n       // The browser doesn't support WebSocket\n       alert(\"WebSocket NOT supported by your Browser!\");\n    }\n  }\n\n  _get_parent_key(key) {\n    const strkey = (''+key);\n    return strkey.substring(0, strkey.length===1?1:strkey.length-1);\n  }\n\n  _get_asset_by_key(key) {\n    if (key && !this.state.assets[key]) {\n      const parent_key = this._get_parent_key(key);\n      return this.state.assets[parent_key].children[key];\n    } else {\n      return this.state.assets[key];\n    }\n  }\n\n  _update_wiring(asset, key, x, y) {\n    let newConn = {};\n    const connections = this.state.connections;\n\n    if(asset['parent']) {\n      for (const p of asset['parent']) {\n        newConn[p.key] = {...connections[p.key], x1:x,  y1:y};\n        x+=250;\n      }\n    } else if (key in connections) {\n      newConn[key] = { ...connections[key], x:x,  y:y };\n    }\n\n    return newConn;\n  }\n\n  /** Update connections between assets (wires) */\n  onPosChange(key, e) {\n\n    const asset = this._get_asset_by_key(key);\n    const connections = this.state.connections;\n    let newConn = this._update_wiring(asset, key, e.target.x(), e.target.y());\n\n    let childConn = {};\n\n    let assets = {...this.state.assets};\n    let asset_details = {...assets[key]};\n    assets[key] = {...asset_details, ...{x: e.target.x(), y: e.target.y()}};\n\n    if (asset.children && asset.type == 'pdu') {\n\n      let x=100;\n      for (const ckey of Object.keys(asset.children)) {\n        const c = this._update_wiring(this._get_asset_by_key(ckey), ckey, e.target.x()+x, e.target.y());\n        Object.assign(childConn, c);\n        x += 90;\n      }\n    } else if (asset.children && asset.type == 'ups') {\n\n      let x = 250;\n      let y = 150;\n      let outletIndex = 0;\n      for (const ckey of Object.keys(asset.children)) {\n        const c = this._update_wiring(this._get_asset_by_key(ckey), ckey, e.target.x()+x, e.target.y() + y);\n        Object.assign(childConn, c);\n        x += 100;\n        outletIndex++;\n        if (outletIndex == 4) {\n          y += 100;\n          x = 250;\n        }\n      }\n    }\n\n    this.setState({ assets, connections: {...connections, ...newConn, ...childConn }});\n  }\n\n  /** Handle Asset Selection */\n  onElementSelection(assetKey, assetInfo) {\n    this.setState((oldState) => {\n      return {\n        selectedAssetKey: oldState.selectedAssetKey === assetKey ? 0 : assetKey,\n        selectedAsset: assetInfo\n      };\n    });\n  }\n\n  /** Send a status change request */\n  changeStatus(assetKey, assetInfo) {\n    let data = {...assetInfo};\n    data.status = !data.status;\n    this.ws.send(JSON.stringify({request: 'power', key: assetKey, data }));\n  }\n\n  /** Save assets' coordinates in db  */\n  saveLayout() {\n    let data = {};\n    const {assets, connections} = this.state;\n\n    let stage = this.refs.stage.getStage();\n    const stageLayout = {\n      scale: stage.scaleX(),\n      x: stage.x(),\n      y: stage.y()\n    };\n\n    data['stage'] = stageLayout;\n    data['assets'] = {};\n\n    // add asset layout info\n    Object.keys(assets).map((a) => ( data['assets'][a]= {x: assets[a].x, y: assets[a].y} ));\n    Object.keys(connections).map((a) => {\n      if (!assets[a]) {\n        data['assets'][a]= { x: connections[a].x, y: connections[a].y };\n      }\n    });\n\n    if (this.ws.readyState == this.ws.OPEN) {\n      this.ws.send(JSON.stringify({request: 'layout', data }));\n      this.setState({ changesSaved: true });\n    }\n  }\n\n\n\n  /** Add Socket to the Layout */\n  drawSocket(key, asset) {\n    const powered = asset.parent?this._get_asset_by_key(asset.parent[0].key).status:true;\n    return (\n    <Socket\n      onPosChange={this.onPosChange.bind(this)}\n      onElementSelection={this.onElementSelection.bind(this)}\n      assetId={key}\n      key={key}\n      asset={asset}\n      selectable={true}\n      selected={this.state.selectedAssetKey === key}\n      draggable={true}\n      powered={powered !== 0}\n      x={asset.x}\n      y={asset.y}\n    />);\n  }\n\n\n  /** Add PDU to the Layout */\n  drawPdu(key, asset) {\n    const powered = asset.parent?this._get_asset_by_key(asset.parent[0].key).status:false;\n    return (\n    <Pdu\n      onPosChange={this.onPosChange.bind(this)}\n      onElementSelection={this.onElementSelection.bind(this)}\n      assetId={key}\n      key={key}\n      asset={asset}\n      selected={this.state.selectedAssetKey === key}\n      nestedComponentSelected={this.state.selectedAssetKey in asset.children}\n      powered={powered !== 0}\n      x={asset.x}\n      y={asset.y}\n    />);\n  }\n\n  /* Add Server to the layout */\n  drawServer(key, asset) {\n    let powered = false;\n    if (asset.parent) {\n      powered = asset.parent.find((x) => this._get_asset_by_key(x.key).status != 0) !== undefined;\n    }\n\n    return (\n    <Server\n      onPosChange={this.onPosChange.bind(this)}\n      onElementSelection={this.onElementSelection.bind(this)}\n      assetId={key}\n      key={key}\n      asset={asset}\n      selected={this.state.selectedAssetKey === key}\n      nestedComponentSelected={this.state.selectedAssetKey in asset.children}\n      powered={powered}\n      x={asset.x}\n      y={asset.y}\n    />);\n  }\n\n  /* Add Ups to the layout */\n  drawUps(key, asset) {\n    let powered = false;\n    if (asset.parent) {\n      powered = asset.parent.find((x) => this._get_asset_by_key(x.key).status != 0) !== undefined;\n    }\n\n    return (\n    <Ups\n      onPosChange={this.onPosChange.bind(this)}\n      onElementSelection={this.onElementSelection.bind(this)}\n      assetId={key}\n      key={key}\n      asset={asset}\n      selected={this.state.selectedAssetKey === key}\n      nestedComponentSelected={this.state.selectedAssetKey in asset.children}\n      powered={powered !== 0}\n      x={asset.x}\n      y={asset.y}\n    />);\n  }\n\n\n  render() {\n\n    const { classes } = this.props;\n    const { assets, connections } = this.state;\n\n    // currently selected asset\n    const selectedAsset = assets ? this._get_asset_by_key(this.state.selectedAssetKey) : null;\n\n    // asset drawings & their connections\n    let systemLayout = [];\n    let wireDrawing = [];\n\n    if (assets) {\n      // Initialize HA system layout\n      for (const key of Object.keys(assets)) {\n        if (assets[key].type == 'outlet' || assets[key].type === 'staticasset') {\n          systemLayout.push(this.drawSocket(key, assets[key]));\n        } else if (assets[key].type === 'pdu') {\n          systemLayout.push(this.drawPdu(key, assets[key]));\n        } else if (assets[key].type === 'server' || assets[key].type === 'serverwithbmc') {\n          systemLayout.push(this.drawServer(key, assets[key]));\n        } else if (assets[key].type === 'ups') {\n          systemLayout.push(this.drawUps(key, assets[key]));\n        }\n      }\n\n      // draw wires\n      for (const key of Object.keys(connections)) {\n        const socketX1pad = 34; // X1, Y1 are for parents\n        const socketY1pad = 35;\n        let socketYpad = 35;\n\n        let socketXpad = socketX1pad;\n        const asset = this._get_asset_by_key(key);\n        const child_type = this.state.assets[connections[key].ckey].type;\n\n        if (child_type == 'staticasset') {\n          socketXpad = -35;\n        } else if (child_type == 'server' || child_type === 'serverwithbmc') {\n          socketXpad = -220;\n        } else if (child_type == 'ups') {\n          socketXpad = -300;\n          socketYpad = 45;\n        }\n\n        wireDrawing.push(\n          <Line\n            points={[connections[key].x+socketX1pad, connections[key].y+socketY1pad, connections[key].x1-socketXpad , connections[key].y1+socketYpad]}\n            stroke={asset.status  === 1?\"green\":\"grey\"}\n            strokeWidth={5}\n            zIndex={300}\n            key={`${key}${connections[key].ckey}`}\n          />\n        );\n      }\n    }\n\n    const snackbarOrigin = {vertical: 'bottom', horizontal: 'left',};\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n\n          {/* Top-Navigation component */}\n          <TopNav\n            saveLayout={this.saveLayout.bind(this)}\n            classes={classes}\n          />\n\n          {/* Main Canvas */}\n          <main className={classes.content} style={{ backgroundImage: 'url('+gridBackground+')', backgroundRepeat: \"repeat\",  backgroundSize: \"auto\" }}>\n            <div className={classes.toolbar} />\n\n            {/* Drawings */}\n            <Stage\n              width={window.innerWidth}\n              height={window.innerHeight * 0.88}\n              ref=\"stage\"\n            >\n              <Layer>\n                {systemLayout}\n                {wireDrawing}\n              </Layer>\n            </Stage>\n\n            {/* LeftMost Card -> Display Element Details */}\n            {(this.state.selectedAssetKey) ?\n              <AssetDetails\n                assetInfo={selectedAsset}\n                assetKey={this.state.selectedAssetKey}\n                changeStatus={this.changeStatus.bind(this)}\n              /> : ''\n            }\n\n            {/* Display message if backend is not available */}\n            <Snackbar\n              anchorOrigin={snackbarOrigin}\n              open={this.state.socketOffline}\n              message={<span>Socket is unavailable: trying to reconnect...</span>}\n            />\n\n            {/* 'Changes Applied'/'Saved' Message */}\n            <Snackbar\n              anchorOrigin={snackbarOrigin}\n              open={this.state.changesSaved}\n              onClose={()=>this.setState({changesSaved: false})}\n              autoHideDuration={1500}\n              message={<span>Changes saved!</span>}\n            />\n            {/* The layout was not initialized -> display link to the documentation*/}\n            <Snackbar\n              anchorOrigin={snackbarOrigin}\n              open={!this.state.socketOffline && !assets}\n              message={<span>The system toplology appears to be empty. <br/> Please, refer to the documentation\n                (System Modelling <a href=\"https://simengine.readthedocs.io/en/latest/SystemModeling/\">link</a>)</span>}\n            />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appFrame: {\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  },\n  appBar: {\n    width: `100%`,\n  },\n  'appBar-left': {\n    backgroundColor: \"#36454F\",\n    marginLeft: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  list: {\n    width: 250,\n  },\n});\n\n\nApp.propTypes = {\n  classes: PropTypes.object, // stype\n};\n\n\nexport default withStyles(styles)(App);\n","/* eslint-disable */\n\n// PACKAGE DEPENDENCIES\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// COMPONENTS\n\nimport App from './components/App';\n\n// STYLES\n\nimport 'normalize.css';\nimport './styles/app.scss';\n\n\nReactDOM.render(<App />, document.getElementById('app'));\n","import React from 'react';\nimport { Rect } from 'react-konva';\nimport PropTypes from 'prop-types';\n\n/**\n * LED of a socket\n */\nfunction SocketStatus({ powered, socketOn, x, y }) {\n    const color = powered?(socketOn?\"green\": \"red\"):\"grey\";\n    return (\n      <Rect\n        x={x}\n        y={y}\n        width={10}\n        height={10}\n        fill={color}\n        shadowBlur={5}\n       />\n    );\n}\n\n\nSocketStatus.defaultProps = {\n  red_means_on: false,\n  y: 85,\n  x: 20\n};\n\nSocketStatus.propTypes = {\n  x: PropTypes.number, // X position of the asset\n  y: PropTypes.number, // Y position of the asset\n  socketOn: PropTypes.number.isRequired, // socket status\n  powered: PropTypes.bool.isRequired, // indicates if upstream power is present\n\n};\n\nexport default SocketStatus;\n","\nimport React from 'react';\nimport { Text, Image, Group } from 'react-konva';\nimport socket from '../../../images/socket.svg';\nimport SocketStatus from './SocketStatus';\nimport PropTypes from 'prop-types';\n\n\n/**\n * Outlet Graphics\n */\nexport default class Socket extends React.Component {\n\n    constructor(props) {\n      super();\n      this.state = {\n        image: null,\n        color: 'grey',\n        x: props.x?props.x:40,\n        y: props.y?props.y:0,\n        bgImage: null,\n      };\n\n      if (props.asset && 'imgUrl' in props.asset) {\n        const bgImage = new window.Image();\n        bgImage.src = props.asset.imgUrl;\n        bgImage.onload = () => {\n\n          const oldHeight = bgImage.height;\n          bgImage.height = 160;\n          bgImage.width = bgImage.width / (oldHeight/160);\n\n          this.setState({\n            bgImage: bgImage\n          });\n        };\n      }\n    }\n\n    /** Load Socket Image */\n    componentDidMount() {\n      const image = new window.Image();\n      image.src = socket;\n      image.onload = () => {\n        // setState will redraw layer\n        // because \"image\" property is changed\n\n        this.setState({\n          image: image\n        });\n      };\n    }\n\n    componentWillReceiveProps(newProps) {\n      this.setState({ x: newProps.x, y: newProps.y });\n    }\n\n     /** Notify Parent of Selection */\n    handleClick = () => {\n      if (this.props.selectable) {\n        this.props.onElementSelection(this.props.assetId, this.props.asset);\n      }\n    };\n\n    updateSocketPos = (s) => {\n      this.refs.socket.setZIndex(100);\n      this.setState({ x: s.target.attrs.x, y : s.target.attrs.y });\n      this.props.onPosChange(this.props.assetId, s);\n    }\n\n    render() {\n\n      let strokeColor = this.state.color;\n\n      // Selected when either parent element (e.g. PDU outlet belongs to) is selected\n      // or the socket was selected\n      if (this.props.selectable) {\n        strokeColor = (this.props.selected || this.props.parentSelected) ? \"blue\" : \"grey\";\n      }\n\n      return(\n        <Group\n          x={this.state.x}\n          y={this.state.y}\n          draggable={this.props.draggable}\n          onDragMove={this.updateSocketPos.bind(this)}\n          ref=\"socket\"\n        >\n          {this.state.bgImage !== null &&\n            <Image\n              image={this.state.bgImage}\n              stroke={strokeColor}\n              onClick={this.handleClick}\n            />\n\n          }\n          <Image\n            image={this.state.image}\n            stroke={strokeColor}\n            onClick={this.handleClick}\n          />\n\n          {/* LED */}\n          {this.props.selectable &&\n            <SocketStatus socketOn={this.props.red_means_on?!this.props.asset.status:this.props.asset.status} powered={this.props.powered}/>\n          }\n          { !this.props.hideName &&\n            <Text fontSize={14} fontFamily={'Helvetica'} text={this.props.asset && this.props.asset.name ? this.props.asset.name :'socket'}  y={this.state.bgImage ? 175: 105} />\n          }\n        </Group>\n      );\n    }\n}\n\nSocket.defaultProps = {\n  red_means_on: false,\n};\n\nSocket.propTypes = {\n  x: PropTypes.number, // X position of the asset\n  y: PropTypes.number, // Y position of the asset\n  onPosChange: PropTypes.func.isRequired, // called on asset position change\n  powered: PropTypes.bool.isRequired, // indicates if upstream power is present\n  draggable: PropTypes.bool, // Indicates if the outlet can be dragged\n  red_means_on: PropTypes.bool, // For LED color: if it is red -> powered on\n  asset: PropTypes.object, // Asset Details\n  assetId: PropTypes.string, // Asset Key\n  selected: PropTypes.bool, // Selected by user\n  parentSelected: PropTypes.bool, // Used when an outlet belongs to an asset\n  onElementSelection: PropTypes.func, // Notify parent component of selection\n  selectable: PropTypes.bool.isRequired, // Outlet is an asset,\n  hideName: PropTypes.bool, // Display outlet name\n};\n"],"sourceRoot":""}